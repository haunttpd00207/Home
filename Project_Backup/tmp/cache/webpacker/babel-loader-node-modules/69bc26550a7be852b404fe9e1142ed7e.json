{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport XLSX from 'xlsx';\nexport default {\n  props: {\n    appData: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    submit: function submit(e) {\n      this.appData.message = '';\n\n      if (this.appData.fileExcel && (this.appData.fileGoogle || this.appData.fileYahoo)) {\n        this.appData.message = this.$t(\"error.sure\");\n        this.appData.isImportFile = true;\n        var address_of_cell = this.$t(\"row_check.excel\");\n        this.classify(this.checkFile(address_of_cell, this.appData.message, this.appData.fileExcel));\n\n        if (this.appData.isSelectYahooFile) {\n          var address_of_cell = '';\n          var key_check = [];\n          key_check = this.checkFile(address_of_cell, this.appData.message, this.appData.fileYahoo);\n          console.log(key_check.includes(this.$t(\"key_search.search_yahoo\")));\n\n          if (this.appData.isSearch && !key_check.includes(this.$t(\"key_search.search_yahoo\")) || (this.appData.isVideo || this.appData.isDisplay) && !key_search.includes(this.$t(\"key_search.video_display_yahoo\"))) {\n            this.appData.message = this.$t(\"error.not_match\");\n          }\n        }\n      } else {\n        this.appData.message = this.$t(\"error.error_missing\");\n        this.appData.isImportFile = false;\n      }\n    },\n    checkFile: function checkFile(address_of_cell, message, file) {\n      var workbook = XLSX.read(file, {\n        type: 'binary'\n      });\n      var first_sheet_name = workbook.SheetNames[0];\n      var worksheet = workbook.Sheets[first_sheet_name];\n\n      if (this.appData.isSelectYahooFile) {\n        var headers = [];\n        headers = this.getFileHeader(worksheet);\n        return headers;\n      } else {\n        var desired_cell = worksheet[address_of_cell];\n        var desired_value = desired_cell ? desired_cell.v : undefined;\n        return desired_value;\n      }\n    },\n    getFileHeader: function getFileHeader(sheet) {\n      var headers = [];\n      var range = XLSX.utils.decode_range(sheet['!ref']);\n      var C,\n          R = range.s.r;\n      /* start in the first row */\n\n      /* walk every column in the range */\n\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        var cell = sheet[XLSX.utils.encode_cell({\n          c: C,\n          r: R\n        })];\n        /* find the cell in the first row */\n\n        var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default \n\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n        headers.push(hdr);\n      }\n\n      return headers;\n    },\n    classify: function classify(value) {\n      if (value != undefined) {\n        if (value.includes(this.$t(\"key_search.search\"))) {\n          this.appData.isSearch = true;\n        } else if (value.includes(this.$t(\"key_search.video\"))) {\n          this.appData.isVideo = true;\n        } else if (value.includes(this.$t(\"key_search.display\"))) {\n          this.appData.isDisplay = true;\n        } else {\n          this.appData.message = this.$t(\"error.not_find\");\n        }\n      } else {\n        this.appData.message = \"Undefined\";\n      }\n    }\n  }\n};","map":{"version":3,"sources":["DownloadButton.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div class=\"row\">\n    <div class=\"col-md-12 text-center\">\n      <button @click=\"submit\" type=\"button\" class=\"btn btn-info button-size\" data-toggle=\"modal\" data-target=\"#message\">{{ $t(\"order_comparer.submit\") }}</button>\n      <span class=\"submit-execution\">{{ $t(\"order_comparer.desc_submit\") }}</span>\n    </div>\n  </div>\n\n  <div class=\"modal fade\" id=\"message\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"message\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        \n        <div class=\"modal-body\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n          <h5 v-html=\"appData.message\" class=\"modal-title\" id=\"message\"></h5>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" data-dismiss=\"modal\" v-bind:class=\"{ 'btn btn-secondary': appData.isImportFile, 'btn btn-primary': !appData.isImportFile }\">{{ !appData.isImportFile ? $t(\"order_comparer.ok\") : $t(\"order_comparer.no\") }}</button>\n          <button type=\"button\" class=\"btn btn-primary\" v-show=\"appData.isImportFile\">{{ $t(\"order_comparer.yes\") }}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n</template>\n<script>\n  import XLSX from 'xlsx'\n  export default {\n    props: {\n      appData: {\n        type: Object,\n        required: true\n      }\n    },\n\n    methods : {\n      submit: function(e) {\n        this.appData.message = '';\n        if (this.appData.fileExcel && (this.appData.fileGoogle || this.appData.fileYahoo) ) {\n          this.appData.message = this.$t(\"error.sure\");\n          this.appData.isImportFile = true;\n          var address_of_cell = this.$t(\"row_check.excel\");\n          this.classify(this.checkFile(address_of_cell,this.appData.message,this.appData.fileExcel));\n          if (this.appData.isSelectYahooFile) {\n            var address_of_cell = '';\n            var key_check = [] ;\n            key_check = this.checkFile(address_of_cell,this.appData.message,this.appData.fileYahoo);\n            console.log(key_check.includes(this.$t(\"key_search.search_yahoo\")));\n            if ((this.appData.isSearch && !key_check.includes(this.$t(\"key_search.search_yahoo\"))) || ((this.appData.isVideo || this.appData.isDisplay) && !key_search.includes(this.$t(\"key_search.video_display_yahoo\")))) {\n              this.appData.message = this.$t(\"error.not_match\");\n            }\n          }\n        } else {\n          this.appData.message = this.$t(\"error.error_missing\");\n          this.appData.isImportFile = false;\n        }\n      },\n\n      checkFile: function(address_of_cell,message,file) {\n        const workbook = XLSX.read(file, {type:'binary'});\n        const first_sheet_name = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[first_sheet_name];\n        if (this.appData.isSelectYahooFile) {\n          var headers = [];\n          headers = this.getFileHeader(worksheet);\n          return headers;\n        } else {\n          var desired_cell = worksheet[address_of_cell];\n          var desired_value = (desired_cell ? desired_cell.v : undefined);\n          return desired_value;\n        }\n      },\n\n      getFileHeader: function(sheet) {\n        var headers = [];\n        var range = XLSX.utils.decode_range(sheet['!ref']);\n        var C, R = range.s.r; /* start in the first row */\n        /* walk every column in the range */\n        for(C = range.s.c; C <= range.e.c; ++C) {\n            var cell = sheet[XLSX.utils.encode_cell({c:C, r:R})] /* find the cell in the first row */\n\n            var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default \n            if(cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n\n            headers.push(hdr);\n        }\n        return headers;\n      },\n\n      classify: function(value) {\n        if (value != undefined) {\n          if (value.includes(this.$t(\"key_search.search\"))) {\n            this.appData.isSearch = true;\n          } else if (value.includes(this.$t(\"key_search.video\"))) {\n            this.appData.isVideo = true;\n          } else if (value.includes(this.$t(\"key_search.display\"))) {\n            this.appData.isDisplay = true;\n          } else {\n            this.appData.message = this.$t(\"error.not_find\");\n          }\n        } else {\n          this.appData.message = \"Undefined\";\n        }\n      }\n    }\n}\n</script>\n<style>\n  .submit-execution {\n    font-size: 14px;\n    padding-left: 20px;\n  }\n</style>"],"sourceRoot":"app/javascript/components"},"metadata":{},"sourceType":"module"}